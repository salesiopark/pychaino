name: Build and Deploy Documentation

on:
  push:
    branches: [ main, master ]  # 메인 브랜치에 푸시할 때
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .  # 패키지를 editable 모드로 설치
        
    - name: Build documentation
      run: |
        cd docs
        # _static 디렉토리 생성
        mkdir -p _static
        # API 문서 자동 생성
        sphinx-apidoc -f -M -o . ../src/chaino
        # 기존 index.rst 백업 후 복원 (중복 방지)
        cp index.rst index_backup.rst
        # HTML 문서 빌드
        sphinx-build -b html . _build/html
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./docs/_build/html

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4